// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using jasguarApi;

#nullable disable

namespace jasguarApi.Migrations
{
    [DbContext(typeof(JasguarContext))]
    partial class JasguarContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.7")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            MySqlModelBuilderExtensions.AutoIncrementColumns(modelBuilder);

            modelBuilder.Entity("jasguarApi.ACAdapter", b =>
                {
                    b.Property<int>("ACAdapterId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("ACAdapterId"));

                    b.Property<int>("AcadapterConnectorTypeId")
                        .HasColumnType("int");

                    b.Property<string>("Brand")
                        .HasColumnType("longtext");

                    b.Property<float>("InputVoltaje")
                        .HasColumnType("float");

                    b.Property<float>("OutputVoltaje")
                        .HasColumnType("float");

                    b.HasKey("ACAdapterId");

                    b.HasIndex("AcadapterConnectorTypeId");

                    b.ToTable("ACAdapters");
                });

            modelBuilder.Entity("jasguarApi.ConnectorType", b =>
                {
                    b.Property<int>("ConnectorTypeId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("ConnectorTypeId"));

                    b.Property<string>("ConnectorName")
                        .HasColumnType("longtext");

                    b.Property<int>("ConnectorWidth")
                        .HasColumnType("int");

                    b.Property<string>("Polarity")
                        .HasColumnType("longtext");

                    b.HasKey("ConnectorTypeId");

                    b.ToTable("ConnectorTypes");
                });

            modelBuilder.Entity("jasguarApi.Device", b =>
                {
                    b.Property<int>("DeviceId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("DeviceId"));

                    b.Property<int>("AcAdapterId")
                        .HasColumnType("int");

                    b.Property<string>("Brand")
                        .HasColumnType("longtext");

                    b.Property<string>("Description")
                        .HasColumnType("longtext");

                    b.Property<int>("DeviceTypeId")
                        .HasColumnType("int");

                    b.Property<string>("Discriminator")
                        .IsRequired()
                        .HasMaxLength(13)
                        .HasColumnType("varchar(13)");

                    b.Property<int>("DisplayId")
                        .HasColumnType("int");

                    b.HasKey("DeviceId");

                    b.HasIndex("AcAdapterId");

                    b.HasIndex("DeviceTypeId");

                    b.HasIndex("DisplayId");

                    b.ToTable("Devices");

                    b.HasDiscriminator().HasValue("Device");

                    b.UseTphMappingStrategy();
                });

            modelBuilder.Entity("jasguarApi.DeviceType", b =>
                {
                    b.Property<int>("DeviceTypeId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("DeviceTypeId"));

                    b.Property<string>("DeviceName")
                        .HasColumnType("longtext");

                    b.HasKey("DeviceTypeId");

                    b.ToTable("DeviceTypes");
                });

            modelBuilder.Entity("jasguarApi.Display", b =>
                {
                    b.Property<int>("DisplayId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("DisplayId"));

                    b.Property<string>("BacklightType")
                        .HasColumnType("longtext");

                    b.Property<int>("PinNumber")
                        .HasColumnType("int");

                    b.HasKey("DisplayId");

                    b.ToTable("Displays");
                });

            modelBuilder.Entity("jasguarApi.Job", b =>
                {
                    b.Property<int>("JobId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("JobId"));

                    b.Property<float>("JobCost")
                        .HasColumnType("float");

                    b.Property<int>("TicketId")
                        .HasColumnType("int");

                    b.HasKey("JobId");

                    b.HasIndex("TicketId");

                    b.ToTable("Jobs");
                });

            modelBuilder.Entity("jasguarApi.Material", b =>
                {
                    b.Property<int>("MaterialId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("MaterialId"));

                    b.Property<string>("MaterialName")
                        .HasColumnType("longtext");

                    b.HasKey("MaterialId");

                    b.ToTable("Materials");
                });

            modelBuilder.Entity("jasguarApi.Role", b =>
                {
                    b.Property<int>("RoleId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("RoleId"));

                    b.Property<string>("RoleDescription")
                        .HasColumnType("longtext");

                    b.HasKey("RoleId");

                    b.ToTable("Roles");
                });

            modelBuilder.Entity("jasguarApi.ScreenApp", b =>
                {
                    b.Property<int>("ScreenAppId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("ScreenAppId"));

                    b.Property<string>("ScreenName")
                        .HasColumnType("longtext");

                    b.HasKey("ScreenAppId");

                    b.ToTable("ScreenApps");
                });

            modelBuilder.Entity("jasguarApi.Ticket", b =>
                {
                    b.Property<int>("TicketId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("TicketId"));

                    b.Property<int>("DeviceId")
                        .HasColumnType("int");

                    b.Property<DateTime>("TicketCloseDate")
                        .HasColumnType("datetime(6)");

                    b.Property<DateTime>("TicketOpenDate")
                        .HasColumnType("datetime(6)");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.HasKey("TicketId");

                    b.HasIndex("DeviceId");

                    b.HasIndex("UserId");

                    b.ToTable("Tickets");
                });

            modelBuilder.Entity("jasguarApi.User", b =>
                {
                    b.Property<int>("UserId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("UserId"));

                    b.Property<DateTime>("Createdon")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("Discriminator")
                        .IsRequired()
                        .HasMaxLength(8)
                        .HasColumnType("varchar(8)");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<bool>("IsActive")
                        .HasColumnType("tinyint(1)");

                    b.Property<string>("Lastname")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Phone")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<int>("RoleId")
                        .HasColumnType("int");

                    b.Property<string>("Salt")
                        .HasColumnType("longtext");

                    b.Property<bool>("ValidatedAccount")
                        .HasColumnType("tinyint(1)");

                    b.HasKey("UserId");

                    b.HasIndex("RoleId");

                    b.ToTable("Users");

                    b.HasDiscriminator().HasValue("User");

                    b.UseTphMappingStrategy();
                });

            modelBuilder.Entity("jasguarApi.UserPermissions", b =>
                {
                    b.Property<int>("UserPermissionsId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("UserPermissionsId"));

                    b.Property<int>("ScreenId")
                        .HasColumnType("int");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.HasKey("UserPermissionsId");

                    b.HasIndex("ScreenId");

                    b.HasIndex("UserId");

                    b.ToTable("UserPermissions");
                });

            modelBuilder.Entity("jasguarApi.DesktopSystem", b =>
                {
                    b.HasBaseType("jasguarApi.Device");

                    b.Property<int>("PowerSupplyWatts")
                        .HasColumnType("int");

                    b.HasDiscriminator().HasValue("DesktopSystem");
                });

            modelBuilder.Entity("jasguarApi.Laptop", b =>
                {
                    b.HasBaseType("jasguarApi.Device");

                    b.HasDiscriminator().HasValue("Laptop");
                });

            modelBuilder.Entity("jasguarApi.Monitor", b =>
                {
                    b.HasBaseType("jasguarApi.Device");

                    b.Property<float>("ScreenSize")
                        .HasColumnType("float");

                    b.Property<bool>("UseACAdapter")
                        .HasColumnType("tinyint(1)");

                    b.HasDiscriminator().HasValue("Monitor");
                });

            modelBuilder.Entity("jasguarApi.Printer", b =>
                {
                    b.HasBaseType("jasguarApi.Device");

                    b.Property<string>("TonnerType")
                        .HasColumnType("longtext");

                    b.HasDiscriminator().HasValue("Printer");
                });

            modelBuilder.Entity("jasguarApi.Customer", b =>
                {
                    b.HasBaseType("jasguarApi.User");

                    b.HasDiscriminator().HasValue("Customer");
                });

            modelBuilder.Entity("jasguarApi.ACAdapter", b =>
                {
                    b.HasOne("jasguarApi.ConnectorType", "ConnectorType")
                        .WithMany()
                        .HasForeignKey("AcadapterConnectorTypeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("ConnectorType");
                });

            modelBuilder.Entity("jasguarApi.Device", b =>
                {
                    b.HasOne("jasguarApi.ACAdapter", "ACAdapter")
                        .WithMany()
                        .HasForeignKey("AcAdapterId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("jasguarApi.DeviceType", "DeviceType")
                        .WithMany()
                        .HasForeignKey("DeviceTypeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("jasguarApi.Display", "Display")
                        .WithMany()
                        .HasForeignKey("DisplayId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("ACAdapter");

                    b.Navigation("DeviceType");

                    b.Navigation("Display");
                });

            modelBuilder.Entity("jasguarApi.Job", b =>
                {
                    b.HasOne("jasguarApi.Ticket", "Ticket")
                        .WithMany()
                        .HasForeignKey("TicketId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Ticket");
                });

            modelBuilder.Entity("jasguarApi.Ticket", b =>
                {
                    b.HasOne("jasguarApi.Device", "Device")
                        .WithMany()
                        .HasForeignKey("DeviceId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("jasguarApi.User", "User")
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Device");

                    b.Navigation("User");
                });

            modelBuilder.Entity("jasguarApi.User", b =>
                {
                    b.HasOne("jasguarApi.Role", "Role")
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Role");
                });

            modelBuilder.Entity("jasguarApi.UserPermissions", b =>
                {
                    b.HasOne("jasguarApi.ScreenApp", "ScreenApp")
                        .WithMany()
                        .HasForeignKey("ScreenId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("jasguarApi.User", "User")
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("ScreenApp");

                    b.Navigation("User");
                });
#pragma warning restore 612, 618
        }
    }
}
